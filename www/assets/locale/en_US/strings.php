<?php
define("JUMBOTRON", "Sky observations database");
define("JUMBO_IM", "Total images");
define("JUMBO_IM_TOOLTIP", "Images captured and processed");
define("HOME", "Home");
define("HOME_SUB", "Last observations");
define("VIDEOS", "Videos");
define("VIDEOS_SUB", "Daily videos");
define("ABOUT", "About");
define("ABOUT_SUB", "Our vision");
define("CONTACT", "Contact");
define("CONTACT_SUB", "Contact us");
define("SEARCH", "Search...");
define("SEARCH_SUB", "Or <a href=\"search.php\">advanced search</a>");
define("FOOT_MAIN", "<a href='https://git.radio.clubs.etsit.upm.es/Meteor-automated/Satellite-Archive'>Source Code</a> | <a href='https://radio.clubs.etsit.upm.es/'>RadioClub E.I.T</a> | Written with <3 by <a href='https://git.radio.clubs.etsit.upm.es/Meteor-automated/Satellite-Archive#user-content-authors'>respective authors</a>");
define("FOOT_SUB", "");
define("MODAL_DATE", "Date uploaded");
define("MODAL_DATE_VIDEO", "Date");
define("MODAL_NUMIMAGES_VIDEO", "Number of pictures");
define("MODAL_DURATION_VIDEO", "Duration");
define("MODAL_VISITS_VIDEO", "Visits");
define("MODAL_TELESCOPE", "Telecope");
define("MODAL_RADIO", "Radio");
define("MODAL_FILTER", "Filter");
define("MODAL_CAMERA", "Camera");
define("MODAL_TIME_EXP", "Time exposure");
define("MODAL_LAT", "Latitude");
define("MODAL_LONG", "Longitude");
define("MODAL_ALT", "Altitude");
define("MODAL_RATE", "Rate");
define("MODAL_TITLE", "pass from");
define("MODAL_CLOSE", "Close");
define("MODAL_MOREINFO", "More info");
define("META_SOURCE", "Source");
define("META_SOURCE_TOOLTIP", "");
define("META_SHORT_DESC", "Short description");
define("META_SHORT_DESC_TOOLTIP", "");
define("META_DATE_OBS", "Date observation");
define("META_DATE_OBS_TOOLTIP", "");
define("META_IMG_ID", "Image ID");
define("META_IMG_ID_TOOLTIP", "");
define("META_LST", "LST");
define("META_LST_TOOLTIP", "Local Sidereal Time");
define("META_SUN_XY_PX", "Sun XY-PX");
define("META_SUN_XY_PX_TOOLTIP", "Position of the center of the Sun, e.g.(horizontal, vertical), in pixels relative to the top left corner");
define("META_BITPIX", "BITPIX");
define("META_BITPIX_TOOLTIP", "Bits per pixel component");
define("META_NAXIS", "NAXIS");
define("META_NAXIS_TOOLTIP", "Number of Axis, i.e. dimensions, should be 2 or 3");
define("META_NAXIS1", "NAXIS1");
define("META_NAXIS1_TOOLTIP", "Width in pixels");
define("META_NAXIS2", "NAXIS2");
define("META_NAXIS2_TOOLTIP", "Height in pixels");
define("META_HIST", "History");
define("META_HIST_TOOLTIP", "Processing info and other relevant stuff");
define("META_MOUNT_FLIP", "Mount flip");
define("META_MOUNT_FLIP_TOOLTIP", "Telescope flip: 0 = EAST , 1 = WEST");
define("META_BLACK", "Black");
define("META_BLACK_TOOLTIP", "Image is dark");
define("META_EPH_SUN_DIAM_PX", "EPH-SUN-DIAM-PX");
define("META_EPH_SUN_DIAM_PX_TOOLTIP", "Diameter of the Sun in pixels");
define("META_ORIGINAL_SHAPE", "Original Shape");
define("META_ORIGINAL_SHAPE_TOOLTIP", "Shape of the original (BMP) image array");
define("META_COLOR_GAMMA", "Color gamma");
define("META_COLOR_GAMMA_TOOLTIP", "Color adjustment gamma");
define("META_UNSHARP_GAMMA", "Unsharp gamma");
define("META_UNSHARP_GAMMA_TOOLTIP", "");
define("META_FILTER", "Filter");
define("META_FILTER_TOOLTIP", "Filter type / Wavelength");
define("META_PIPELINE_CONFIG_MODE", "Pipeline config mode");
define("META_PIPELINE_CONFIG_MODE_TOOLTIP", "Pipeline configuration mode");
define("META_UNSHARP_FLAG", "Unsharp flag");
define("META_UNSHARP_FLAG_TOOLTIP", "");
define("META_MASK_LOW", "Mask low");
define("META_MASK_LOW_TOOLTIP", "Lower value for mask of the Sun");
define("META_STRETCH_INPUT", "Stretch input");
define("META_STRETCH_INPUT_TOOLTIP", "Stretching parameters");
define("META_FILESIZE", "Filesize");
define("META_FILESIZE_TOOLTIP", "");
define("META_OBS_NAME", "Station Name");
define("META_OBS_NAME_TOOLTIP", "");
define("META_OPR_SIN", "Operation since");
define("META_OPR_SIN_TOOLTIP", "");
define("META_OPR_BY", "Operated by");
define("META_OPR_BY_TOOLTIP", "Organisation responsible for data");
define("META_LAT", "Latitude");
define("META_LAT_TOOLTIP", "Station latitude");
define("META_LONG", "Longitude");
define("META_LAT_TOOLTIP", "Station longitude");
define("META_ALT", "Altitude");
define("META_ALT_TOOLTIP", "Station altitude");
define("META_TEL_RA", "Telescope right ascension");
define("META_TEL_RA_TOOLTIP", "");
define("META_TEL_DEC", "Telescope declination");
define("META_TEL_DEC_TOOLTIP", "");
define("META_TEL_AZ", "Telescope azimuth");
define("META_TEL_AZ_TOOLTIP", "");
define("META_TEL_ALT", "Telescope altitude");
define("META_TEL_ALT_TOOLTIP", "");
define("META_TEL", "Telescope");
define("META_TEL_TOOLTIP", "Name of the data acqusition telescope");
define("META_INST", "Instrument");
define("META_INST_TOOLTIP", "Name of the data acqusition instrument");
define("META_TIME_EXP", "Time exposure");
define("META_TIME_EXP_TOOLTIP", "Exposure length in milliseconds");
define("META_SCRPT", "Script");
define("META_SCRPT_TOOLTIP", "Path of the processing script");
define("META_MNT_NAME", "Mount name");
define("META_MNT_NAME_TOOLTIP", "");
define("BUTTON_CSV_TOOLTIP", "CSV file output");
define("BUTTON_JSON_TOOLTIP", "JSON file ouput");
define("BUTTON_THUMB_TOOLTIP", "Download thumbnail");
define("BUTTON_LARGE_TOOLTIP", "Download large thumbnail");
define("BUTTON_BITMAP_TOOLTIP", "Download Bitmap");
define("RATE_MAIN", "Rating");
define("RATE_POST", "Your rating has been changed, thanks for rating!");
define("RATE_PRE", "Be the first to vote!");
define("SOCIAL_TWITTER_TOOLTIP", "Share on twitter");
define("SOCIAL_MAIL_TOOLTIP", "Send by mail");
define("SEARCH_KEYWORDS", "Keywords");
define("SEARCH_SINCE", "Since");
define("SEARCH_UNTIL", "Until");
define("SEARCH_SOURCE", "Source");
define("SEARCH_FILTER", "Filter");
define("SEARCH_DISCARD_DARK", "Discard dark pictures");
define("SEARCH_ONLY_FEAT", "Only featured images");
define("SEARCH_SEARCH", "Search");
define("SEARCH_WHATEVER", "Whatever");
define("SEARCH_OBTAINED", "Obtained");
define("SEARCH_RESULTS", "results");
define("SEARCH_ORDERDATEDESC", "Order by Date DESC");
define("SEARCH_ORDERDATEASC", "Order by Date ASC");
define("SEARCH_ORDERRATEDESC", "Order by Rate DESC");
define("SEARCH_ORDERRATEASC", "Order by Rate ASC");
define("SEARCH_DATEDESC", "Date DESC");
define("SEARCH_DATEASC", "Date ASC");
define("SEARCH_RATEDESC", "Rate DESC");
define("SEARCH_RATEASC", "Rate ASC");
define("PAGINATION_PREV", "Previous");
define("PAGINATION_NEXT", "Next");
define("SUN", "Sun");
define("VIDEO_APPEARS", "Appears on this video!");
define("ABOUT_TITLE", "About");
define("ABOUT_CONTENT", "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.");
define("META_SATELLITE", "Satellite");
define("META_SATELLITE_TOOLTIP", "Name of the satellite received");
define("META_NORAD_ID", "Norad ID");
define("META_NORAD_ID_TOOLTIP", "NORAD ID of the satellite received");
define("META_FREQ", "Frequency");
define("META_FREQ_TOOLTIP", "Frequency of the reception in MHz");
define("META_TRANSPONDER", "Transponder");
define("META_TRANSPONDER_TOOLTIP", "Transponder of that frequency");
define("META_BANDWIDTH", "Bandwidth");
define("META_BANDWIDTH_TOOLTIP", "Bandwidth used when demodulation/filtering in Hz");
define("META_DEVIATION", "Deviation");
define("META_DEVIATION_TOOLTIP", "Deviation frequency used in demodulation in Hz");
define("META_CODIFICATION", "Codification");
define("META_CODIFICATION_TOOLTIP", "Codification used on the data received");
define("META_TLE", "TLE");
define("META_TLE_TOOLTIP", "TLE used on the reception");
define("META_TLE_DATE", "Tle from");
define("META_TLE_DATE_TOOLTIP", "Date when the TLE was fetched in %Y%m%d-%H%M%S");
define("META_AZI_RISE", "Rise on azimuth");
define("META_AZI_RISE_TOOLTIP", "Azimuth when the satellite starts (rise) in degrees");
define("META_AZI_SET", "Set on azimuth");
define("META_AZI_SET_TOOLTIP", "Azimuth when ends reception (set) in degrees");
define("META_EPOCH_STARTS", "Epoch start");
define("META_EPOCH_STARTS_TOOLTIP", "Epoch when the reception starts");
define("META_EPOCH_ENDS", "Epoch end");
define("META_EPOCH_ENDS_TOOLTIP", "Epoch when the pass ends");
define("META_DURATION", "Duration");
define("META_DURATION_TOOLTIP", "Duration of the pass");
define("META_MAX_ELEV", "Maximun elevation");
define("META_MAX_ELEV_TOOLTIP", "Maximun elevation of the pass");
define("META_DECOD_SOFTWARE", "Decodification Software used");
define("META_DECOD_SOFTWARE_TOOLTIP", "Decodification software used");
define("META_RADIO", "Radio");
define("META_RADIO_TOOLTIP", "Radio used on reception");
define("SEARCH_SATELLITE", "Satellite");
define("SEARCH_STATION", "Station");
define("BUTTON_DIR_TOOLTIP", "All files");
define("BUTTON_MSA_FILE_TOOLTIP", "MSA image");
define("BUTTON_MCIR_FILE_TOOLTIP", "MCIR image");
define("BUTTON_HVCT_FILE_TOOLTIP", "HVCT image");
define("BUTTON_THERM_FILE_TOOLTIP", "THERM image");
define("BUTTON_NO_FILE_TOOLTIP", "NO image");
define("BUTTON_MB_FILE_TOOLTIP", "MB image");
define("BUTTON_HF_FILE_TOOLTIP", "HF image");
define("BUTTON_HE_FILE_TOOLTIP", "HE image");
define("BUTTON_EC_FILE_TOOLTIP", "EC image");
define("BUTTON_CC_FILE_TOOLTIP", "CC image");
define("BUTTON_MD_FILE_TOOLTIP", "MD image");
define("BUTTON_ZA_FILE_TOOLTIP", "ZA image");
define("BUTTON_COMPOSITE_FILE_TOOLTIP", "Composite image");
define("BUTTON_NOAA_WAV_FILE_TOOLTIP", "demodulated WAV file");
define("BUTTON_NOAA_IQ_FILE_TOOLTIP", "raw IQ file");
define("BUTTON_MET_WAV_FILE_TOOLTIP", "raw normilized WAV file");
define("BUTTON_MET_QPSK_FILE_TOOLTIP", "demodulated qpsk file");
define("BUTTON_MET_IQ_FILE_TOOLTIP", "raw IQ file");
define("BUTTON_MET_DEC_FILE_TOOLTIP", "meteor dec file");
define("CARD_POLAR_TITLE", "Polar graph");
